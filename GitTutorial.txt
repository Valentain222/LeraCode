// Установка Git
// В зависимости от версии, нужно выбрать нужную команду

sudo apt update && sudo apt install git  // Для Debian/Ubuntu
sudo dnf install git                   // Для Fedora
sudo pacman -S git                     // Для Arch Linux
sudo zypper install git                // Для openSUSE

// Дальше настроим Git
// Закинь в терминал команды

git config --global user.name "Valentain222"
git config --global user.email "isaev.valentin2022@yandex.ru"

// Дальше тебе нужно будет перейти в локальную папку через терминал, где будет лежать репозиторий
// Используй команду cd, пример ниже

cd PATH

cd Example/Nto

// После этого ты должен будешь клонировать репозиторий используя команду

git clone URL_PATH

git clone https:/hfhf/nto.git // Ссылку на репозиторий дадут на финале

// Он запросит username и пароль.
// В качестве username нужно указать Valentain222
// В качестве пароля нужно указать personal token, который я скину позже

// Теперь у тебя есть копия нужного репозитория
// В папке будет лежать код, с которым мы будем работать
// Не знаю точную структуру репозитория, возможно будут ветки, возможно все будет делать в главной ветке, на финале определимся
// Но вот часть команд, которые точно будут полезны

// Переключение между ветками

git checkout имя_ветки

git checkout branch_example

// Создание ветки

git checkout -b новая_ветка

git checkout -b new_branch

// Еще одна важная команда - обновление данных локального репозитория. Т.е. подргузить данные с сервера

git pull

// ВАЖНО! Перед использованием этой команды стоит обязательно сохранить куда-то решение.

// Команда для добавления локальных изменений, которые ты собираешься отправить на репозиторий
// После использования этой команды данные будут подготовлены к отправке, но не будут на репозитории

git add // . - все файлы, можно указывать файлы по отдельности

git add . //Все файлы
git add main.py // Файл main.py
git add main.py example.py // Прикрепляем несколько фалов

// После прикрепления изменений, обычно создают коммит

git commit -m "Имя коммита"

// После создания коммита осталось отпрвить его на репозиторий

git push

// Пример конструкции, для того чтобы закинуть изменения в репозиторий. Грубо говоря это паттерн, который ты будешь исопльзовать

git add .
git commit -m "End work day 01.01.2022" // Имя можно давать даже на русском и какое угодно, но желательно осмысленное
git push 

// По всем вопросам обращаться ко мне, или к кому-нибудь еще, обладающим знаниями гита в нашей команде.